ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

java {
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'

    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    // https://mvnrepository.com/artifact/org.jsonschema2pojo/jsonschema2pojo-core
    implementation 'org.jsonschema2pojo:jsonschema2pojo-core:1.1.2'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.3'
}

test {
    useJUnitPlatform()
}

jar.enabled = true

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = group
            artifactId = 'springwolfdoc2dto-core'
            version = version

            pom {
                name = 'springwolfdoc2dto-core'
                description = 'A library for generate dto classes by SpringWolf documentations'
                url = 'https://github.com/stepanovD/springwolfdoc2dto'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'distep2'
                        name = 'Dmitry Stepanov'
                        email = 'distep2@gmail.com'
                    }
                }

                scm {
                    url = 'https://github.com/stepanovD/springwolfdoc2dto'
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = project.findProperty('ossrhUsername') ?: ''
                password = project.findProperty('ossrhPassword') ?: ''
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
